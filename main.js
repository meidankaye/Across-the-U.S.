!function(){"use strict";document.querySelector(".places");const e=document.querySelector("#place-template"),t=document.querySelector(".popup_type_edit").querySelector(".popup__form"),s=document.querySelector(".popup_type_add").querySelector(".popup__form"),r=document.querySelector(".profile__edit-button"),i=document.querySelector(".profile__add-button"),n=document.querySelector(".profile__image-overlay"),o=document.querySelector(".popup__input_type_name"),a=document.querySelector(".popup__input_type_profession"),c={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function l(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function u(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var h=class{constructor(e,t){u(this,"_showInputError",(e=>{const t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)})),u(this,"_hideInputError",(e=>{const t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)})),u(this,"_hasOnlyValidInputs",(()=>this._inputList.every((e=>e.validity.valid)))),u(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e)})),u(this,"_setEventListeners",(()=>{this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._toggleButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))})),u(this,"_toggleButton",(()=>{this._hasOnlyValidInputs()?(this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass)):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)})),u(this,"resetFormValidation",(()=>{this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButton()})),u(this,"enableValidation",(()=>{this._setEventListeners()})),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}},_=class{constructor(e){var t,s;s=e=>{e.preventDefault(),"Escape"===e.key&&this.close()},(t="_handleEscUp")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popupElement=document.querySelector(e),this._handleEscUp=this._handleEscUp,this.close=this.close.bind(this)}setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",this.close),this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("popup")&&this.close()}))}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscUp)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscUp)}},d=class extends _{constructor(e,t,s){super(e),this._popupForm=this._popupElement.querySelector(".popup__form"),this._button=this._popupForm.querySelector(".popup__button"),this._inputList=Array.from(this._popupForm.querySelectorAll(".popup__input")),this._buttonText=s,this._handleSubmit=t}getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}close(){this._popupForm.reset(),super.close()}showLoading(){this._button.textContent="Saving..."}hideLoading(){this._button.textContent=this._buttonText}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this.getInputValues())})),super.setEventListeners()}};let p;const m=new class{constructor(e){let{nameSelector:t,professionSelector:s,imageSelector:r}=e;this._userName=document.querySelector(t),this._userProfession=document.querySelector(s),this._userImage=document.querySelector(r)}getUserInfo(){return{name:this._userName.textContent,profession:this._userProfession.textContent}}setUserInfo(e){this._userName.textContent=e.name,this._userProfession.textContent=e.about}setUserImage(e){this._userImage.style.backgroundImage='url("'.concat(e,'")')}}({nameSelector:".profile__name",professionSelector:".profile__profession",imageSelector:".profile__image"}),E=new class{constructor(e){let{baseUrl:t,headers:s}=e;var r,i;i=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))),(r="_customFetch")in this?Object.defineProperty(this,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[r]=i,this._baseUrl=t,this._headers=s}getInitialCards(){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers})}getUserInfo(){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}updateUserImage(e){return this._customFetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})})}updateProfile(e){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e.name,about:e.profession})})}addCard(e){let{name:t,link:s}=e;return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify({name:t,link:s})})}removeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}likeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}dislikeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"439544b2-326e-4000-bd7d-7d8ec93af705","Content-Type":"application/json"}});function b(t){const s=new class{constructor(e,t,s){let{data:r,handleCardClick:i,handleDeleteCard:n,handleLikeButton:o}=e;l(this,"updateLikes",(e=>{this._likes=e,this._renderLikes()})),l(this,"removeCard",(()=>this._cardElement.remove())),l(this,"_renderLikes",(()=>{this._cardElement.querySelector(".place__like-count").textContent=this._likes.length;const e=this._cardElement.querySelector(".place__button");this.isLiked()?e.classList.add("place__button_active"):e.classList.remove("place__button_active")})),l(this,"_setEventListeners",(()=>{this._cardElement.querySelector(".place__image").addEventListener("click",(()=>this._handleCardClick(this._name,this._link))),this._cardElement.querySelector(".place__button").addEventListener("click",(()=>this._handleLikeButton(this._id))),this._cardElement.querySelector(".place__trash").addEventListener("click",(()=>this._handleDeleteCard(this._id)))})),l(this,"_getTemplate",(()=>this._cardSelector.content.querySelector(".places__item").cloneNode(!0))),l(this,"getElement",(()=>(this._cardElement=this._getTemplate(),this._setEventListeners(),this._cardElement.querySelector(".place__image").style.backgroundImage="url(".concat(this._link,")"),this._cardElement.querySelector(".place__title").textContent=this._name,this._ownerId!==this._userId&&(this._cardElement.querySelector(".place__trash").style.display="none"),this.updateLikes(this._likes),this._cardElement))),this._name=r.name,this._link=r.link,this._id=r._id,this._likes=r.likes,this._handleCardClick=i,this._handleDeleteCard=n,this._handleLikeButton=o,this._cardSelector=t,this._userId=s,this._ownerId=r.owner._id}isLiked(){return this._likes.some((e=>e._id===this._userId))}}({data:t,handleCardClick:v,handleLikeButton:e=>{s.isLiked()?E.dislikeCard(e).then((e=>{s.updateLikes(e.likes)})).catch((e=>console.log("Error.....: ".concat(e)))):E.likeCard(e).then((e=>{s.updateLikes(e.likes)})).catch((e=>console.log("Error.....: ".concat(e))))},handleDeleteCard:e=>{k.open(),k.setAction((()=>{k.showLoading(),E.removeCard(e).then((()=>{s.removeCard(),k.close()})).catch((e=>console.log("Error.....: ".concat(e)))).finally((()=>{k.hideLoading()}))}))}},e,p);return s.getElement()}function v(e,t){g.open(e,t)}Promise.all([E.getInitialCards(),E.getUserInfo()]).then((e=>{let[t,s]=e;p=s._id,y.render(t),m.setUserImage(s.avatar),m.setUserInfo({name:s.name,about:s.about})})).catch((e=>console.log("Error.....: ".concat(e))));const y=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}render(e){this._items=e,this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:e=>{y.addItem(b(e))}},".places"),g=new class extends _{open(e,t){this._title=this._popupElement.querySelector(".popup__image-name"),this._image=this._popupElement.querySelector(".popup__image-preview"),this._title.textContent=e,this._image.src=t,this._image.alt="Image of ".concat(e),super.open()}}(".popup_type_preview");g.setEventListeners();const f=new d(".popup_type_edit",(function(){const e=f.getInputValues(),t={name:e.name,profession:e.profession};E.updateProfile(t).then((e=>{m.setUserInfo(e),f.close()})).catch((e=>console.log("Error.....: ".concat(e)))),f.showLoading()}),"Save");f.setEventListeners();const L=new d(".popup_type_add",(function(){const e=L.getInputValues(),t={name:e.title,link:e.link};L.showLoading(),E.addCard(t).then((e=>{y.addItem(b(e)),L.close()})).catch((e=>console.log("Error.....: ".concat(e)))).finally((()=>{L.hideLoading()}))}),"Create");L.setEventListeners();const S=new d(".popup_type_avatar",(function(e){E.updateUserImage(e.link).then((e=>{m.setUserImage(e.avatar),S.close()})).catch((e=>console.log("Error.....: ".concat(e)))),S.showLoading()}),"Save");S.setEventListeners();const k=new class extends _{constructor(e){super(e),this._button=this._popupElement.querySelector(".popup__button")}setAction(e){this._handleSubmit=e}showLoading(){this._button.textContent="Deleting..."}hideLoading(){this._button.textContent="Yes"}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()})),super.setEventListeners()}}(".popup_type_confirm");k.setEventListeners();const C=new h(c,t),I=new h(c,s);C.enableValidation(),I.enableValidation(),r.addEventListener("click",(()=>{const e=m.getUserInfo();f.open(),o.value=e.name,a.value=e.profession,C.resetFormValidation()})),i.addEventListener("click",(()=>{I.resetFormValidation(),L.open()})),n.addEventListener("click",(()=>{S.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,