!function(){"use strict";document.querySelector(".places");const e=document.querySelector("#place-template"),t=document.querySelector(".popup_type_edit").querySelector(".popup__form"),s=document.querySelector(".popup_type_add").querySelector(".popup__form"),i=document.querySelector(".profile__edit-button"),r=document.querySelector(".profile__add-button"),n=document.querySelector(".profile__image-overlay"),o=document.querySelector(".popup__input_type_name"),a=document.querySelector(".popup__input_type_profession"),l={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function c(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function u(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var h=class{constructor(e,t){u(this,"_showInputError",(e=>{const t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)})),u(this,"_hideInputError",(e=>{const t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)})),u(this,"_hasOnlyValidInputs",(()=>this._inputList.every((e=>e.validity.valid)))),u(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e)})),u(this,"_setEventListeners",(()=>{this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._toggleButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))})),u(this,"_toggleButton",(()=>{this._hasOnlyValidInputs()?(this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass)):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)})),u(this,"resetFormValidation",(()=>{this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButton()})),u(this,"enableValidation",(()=>{this._setEventListeners()})),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}},_=class{constructor(e){this._popupElement=document.querySelector(e),this._handleEscUp=this._handleEscUp.bind(this),this.close=this.close.bind(this)}_handleEscUp(e){e.preventDefault(),"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",this.close),this._popupElement.addEventListener("mousedown",(e=>{[...e.target.classList].includes("popup")&&this.close()}))}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscUp)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscUp)}},p=class extends _{constructor(e,t,s){super(e),this._popupForm=this._popupElement.querySelector(".popup__form"),this._button=this._popupForm.querySelector(".popup__button"),this._inputList=Array.from(this._popupForm.querySelectorAll(".popup__input")),this._buttonText=s,this._submitHandler=t}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}close(){this._popupForm.reset(),super.close()}showLoading(){this._button.textContent="Saving..."}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues()),this.close()})),super.setEventListeners()}};let d;const m=new class{constructor(e){let{baseUrl:t,headers:s}=e;var i,r;r=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log("Error: ".concat(e))})),(i="_customFetch")in this?Object.defineProperty(this,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[i]=r,this._baseUrl=t,this._headers=s}getInitialCards(){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers})}getUserInfo(){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}updateUserImage(e){return this._customFetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:s}=e;return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify({name:t,link:s})})}removeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}likeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}dislikeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"439544b2-326e-4000-bd7d-7d8ec93af705","Content-Type":"application/json"}});function E(t){const s=new class{constructor(e,t,s){let{data:i,handleCardClick:r,handleDeleteCard:n,handleLikeButton:o}=e;c(this,"handleLikeCard",(e=>{this._likes=e,this._cardElement.querySelector(".place__like-count").textContent=this._likes.length,this._cardElement.querySelector(".place__button").classList.toggle("place__button_active")})),c(this,"removeCard",(()=>this._cardElement.remove())),c(this,"_setEventListeners",(()=>{this._cardElement.querySelector(".place__image").addEventListener("click",(()=>this._handleCardClick(this._name,this._link))),this._cardElement.querySelector(".place__button").addEventListener("click",(()=>this._handleLikeButton(this._id))),this._cardElement.querySelector(".place__trash").addEventListener("click",(()=>this._handleDeleteCard(this._id)))})),c(this,"_getTemplate",(()=>this._cardSelector.content.querySelector(".places__item").cloneNode(!0))),c(this,"getElement",(()=>(this._cardElement=this._getTemplate(),this._setEventListeners(),this._cardElement.querySelector(".place__image").style.backgroundImage="url(".concat(this._link,")"),this._cardElement.querySelector(".place__title").textContent=this._name,this._ownerId!==this._userId&&(this._cardElement.querySelector(".place__trash").style.display="none"),this._cardElement.querySelector(".place__like-count").textContent=this._likes.length,this.isLiked()&&this.handleLikeCard(this._likes),this._cardElement))),this._name=i.name,this._link=i.link,this._id=i._id,this._likes=i.likes,this._handleCardClick=r,this._handleDeleteCard=n,this._handleLikeButton=o,this._cardSelector=t,this._userId=s,this._ownerId=i.owner._id}isLiked(){return this._likes.some((e=>e._id===this._userId))}}({data:t,handleCardClick:y,handleLikeButton:e=>{s.isLiked()?m.dislikeCard(e).then((e=>{s.handleLikeCard(e.likes)})):m.likeCard(e).then((e=>{s.handleLikeCard(e.likes)}))},handleDeleteCard:e=>{C.open(),C.setAction((()=>{C.showLoading(),m.removeCard(e).then((()=>{s.removeCard(),C.close()}))}))}},e,d);return s.getElement()}function y(e,t){g.open(e,t)}Promise.all([m.getInitialCards(),m.getUserInfo()]).then((e=>{let[t,s]=e;d=s._id,v.render(t),b.setUserInfo({name:s.name,profession:s.about})}));const v=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}render(e){this._items=e,this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:e=>{v.addItem(E(e))}},".places"),b=new class{constructor(e){let{nameSelector:t,professionSelector:s,imageSelector:i}=e;this._userName=document.querySelector(t),this._userProfession=document.querySelector(s),this._userImage=document.querySelector(i)}getUserInfo(){return{name:this._userName.textContent,profession:this._userProfession.textContent}}setUserInfo(e){let{name:t,profession:s}=e;this._userName.textContent=t,this._userProfession.textContent=s}setUserImage(e){this._userImage.style.backgroundImage='url("'.concat(e,'")')}}({nameSelector:".profile__name",professionSelector:".profile__profession",imageSelector:".profile__image"}),g=new class extends _{open(e,t){this._title=this._popupElement.querySelector(".popup__image-name"),this._image=this._popupElement.querySelector(".popup__image-preview"),this._title.textContent=e,this._image.src=t,this._image.alt="Image of ".concat(e),super.open()}}(".popup_type_preview");g.setEventListeners();const L=new p(".popup_type_edit",(function(e){b.setUserInfo(e),L.showLoading()}),"Save");L.setEventListeners();const f=new p(".popup_type_add",(function(){const e=f._getInputValues(),t={name:e.title,link:e.link};m.addCard(t).then((e=>{E(e)})),f.showLoading()}),"Create");f.setEventListeners();const S=new p(".popup_type_avatar",(function(e){m.updateUserImage(e.link).then((e=>{b.setUserImage(e)})),S.showLoading()}),"Save");S.setEventListeners();const C=new class extends _{constructor(e){super(e),this._button=this._popupElement.querySelector(".popup__button")}setAction(e){this._submitHandler=e}showLoading(){this._button.textContent="Deleting..."}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler()})),super.setEventListeners()}}(".popup_type_confirm");C.setEventListeners();const k=new h(l,t),q=new h(l,s);k.enableValidation(),q.enableValidation(),i.addEventListener("click",(()=>{const e=b.getUserInfo();L.open(),o.value=e.name,a.value=e.profession,k.resetFormValidation()})),r.addEventListener("click",(()=>{q.resetFormValidation(),f.open()})),n.addEventListener("click",(()=>{S.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,