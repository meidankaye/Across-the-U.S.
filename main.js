!function(){"use strict";document.querySelector(".places");const e=document.querySelector("#place-template"),t=document.querySelector(".popup_type_edit").querySelector(".popup__form"),s=document.querySelector(".popup_type_add").querySelector(".popup__form"),i=document.querySelector(".profile__edit-button"),r=document.querySelector(".profile__add-button"),n=document.querySelector(".popup__input_type_name"),o=document.querySelector(".popup__input_type_profession"),a={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function l(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function c(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var u=class{constructor(e,t){c(this,"_showInputError",(e=>{const t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)})),c(this,"_hideInputError",(e=>{const t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)})),c(this,"_hasOnlyValidInputs",(()=>this._inputList.every((e=>e.validity.valid)))),c(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e)})),c(this,"_setEventListeners",(()=>{this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._toggleButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))})),c(this,"_toggleButton",(()=>{this._hasOnlyValidInputs()?(this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass)):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)})),c(this,"resetFormValidation",(()=>{this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButton()})),c(this,"enableValidation",(()=>{this._setEventListeners()})),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}},_=class{constructor(e){this._popupElement=document.querySelector(e),this._handleEscUp=this._handleEscUp.bind(this),this.close=this.close.bind(this)}_handleEscUp(e){e.preventDefault(),"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",this.close),this._popupElement.addEventListener("mousedown",(e=>{[...e.target.classList].includes("popup")&&this.close()}))}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscUp)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscUp)}},h=class extends _{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".popup__form"),this._inputList=Array.from(this._popupForm.querySelectorAll(".popup__input")),this._submitHandler=t}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues()),this.close()})),super.setEventListeners()}close(){this._popupForm.reset(),super.close()}};let p;const d=new class{constructor(e){let{baseUrl:t,headers:s}=e;var i,r;r=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log("Error: ".concat(e))})),(i="_customFetch")in this?Object.defineProperty(this,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[i]=r,this._baseUrl=t,this._headers=s}getInitialCards(){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers})}getUserInfo(){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}addCard(e){let{name:t,link:s}=e;return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify({name:t,link:s})})}removeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}likeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"439544b2-326e-4000-bd7d-7d8ec93af705","Content-Type":"application/json"}});function m(t){const s=new class{constructor(e,t,s){let{data:i,handleCardClick:r,handleDeleteCard:n,handleLikeButton:o}=e;l(this,"isLiked",(()=>isLiked=this._likes.some((e=>e._id===this._userId)))),l(this,"handleLikeCard",(e=>{this._likes=e,this._cardElement.querySelector(".place__like-count").textContent=this._likes.length,this._cardElement.querySelector(".place__button").classList.toggle("place__button_active")})),l(this,"removeCard",(()=>this._cardElement.remove())),l(this,"_setEventListeners",(()=>{this._cardElement.querySelector(".place__image").addEventListener("click",(()=>this._handleCardClick(this._name,this._link))),this._cardElement.querySelector(".place__button").addEventListener("click",(()=>this._handleLikeButton(this._id))),this._cardElement.querySelector(".place__trash").addEventListener("click",(()=>this._handleDeleteCard(this._id)))})),l(this,"_getTemplate",(()=>this._cardSelector.content.querySelector(".places__item").cloneNode(!0))),l(this,"getElement",(()=>(this._cardElement=this._getTemplate(),this._setEventListeners(),this._cardElement.querySelector(".place__image").style.backgroundImage="url(".concat(this._link,")"),this._cardElement.querySelector(".place__title").textContent=this._name,this._ownerId!==this._userId&&(this._cardElement.querySelector(".place__trash").style.display="none"),this.isLiked&&this.handleLikeCard(this._likes),this._cardElement))),this._name=i.name,this._link=i.link,this._id=i._id,this._likes=i.likes,this._handleCardClick=r,this._handleDeleteCard=n,this._handleLikeButton=o,this._cardSelector=t,this._userId=s,this._ownerId=i.owner._id}}({data:t,handleCardClick:E,handleLikeButton:e=>{d.likeCard(e).then((e=>{s.handleLikeCard(e.likes),console.log(e.likes)}))},handleDeleteCard:e=>{C.open(),C.setAction((()=>{d.removeCard(e).then((()=>{s.removeCard(),C.close()}))}))}},e,p);return s.getElement()}function E(e,t){b.open(e,t)}Promise.all([d.getInitialCards(),d.getUserInfo()]).then((e=>{let[t,s]=e;p=s._id,v.render(t),y.setUserInfo({name:s.name,profession:s.about})}));const v=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}render(e){this._items=e,this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:e=>{v.addItem(m(e))}},".places"),y=new class{constructor(e){let{nameSelector:t,professionSelector:s}=e;this._userName=document.querySelector(t),this._userProfession=document.querySelector(s)}getUserInfo(){return{name:this._userName.textContent,profession:this._userProfession.textContent}}setUserInfo(e){let{name:t,profession:s}=e;this._userName.textContent=t,this._userProfession.textContent=s}}({nameSelector:".profile__name",professionSelector:".profile__profession"}),b=new class extends _{open(e,t){this._title=this._popupElement.querySelector(".popup__image-name"),this._image=this._popupElement.querySelector(".popup__image-preview"),this._title.textContent=e,this._image.src=t,this._image.alt="Image of ".concat(e),super.open()}}(".popup_type_preview");b.setEventListeners();const f=new h(".popup_type_edit",(function(e){y.setUserInfo(e)}));f.setEventListeners();const L=new h(".popup_type_add",(function(){const e=L._getInputValues(),t={name:e.title,link:e.link};d.addCard(t).then((e=>{m(e)}))}));L.setEventListeners();const C=new class extends _{setAction(e){this._submitHandler=e}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler()})),super.setEventListeners()}}(".popup_type_confirm");C.setEventListeners();const S=new u(a,t),k=new u(a,s);S.enableValidation(),k.enableValidation(),i.addEventListener("click",(()=>{const e=y.getUserInfo();f.open(),n.value=e.name,o.value=e.profession,S.resetFormValidation()})),r.addEventListener("click",(()=>{k.resetFormValidation(),L.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,